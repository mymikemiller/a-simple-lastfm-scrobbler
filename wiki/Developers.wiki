#summary How other applications can scrobble music through A Simple Last.fm Scrobbler
#labels Phase-Implementation

= Introduction =

Any application can easily scrobble their music through A Simple Last.fm Scrobbler. It is just to send certain broadcasts with the appropriate track information, and aslfms will do the rest.

You just have to implement the behavior below, and then send a mail to [mailto:simple.lfm.scrobbler@gmail.com simple.lfm.scrobbler@gmail.com] and tell me about it.

*Currently it is not possible for more than one application to scrobble music through aslfms at the same time. Such behavior would probably result in none of the tracks being scrobbled.*

= Details =

The broadcast actions are:

|| PLAYSTATECHANGED || "com.example.musicapp.notify.playstatechanged" || When a track starts playing ||
|| PLAYBACKCOMPLETE || "com.example.musicapp.notify.playbackcomplete" || When a track has finished playing ||

Replace "com.example.musicapp" with your app's package name.

It is not necessary to broadcast PLAYBACKCOMPLETE for a track to scrobble, if a new track starts playing and PLAYSTATECHANGED is broadcast.

A PLAYSTATECHANGED intent can be broadcast for the same track several times, and it'll still be scrobbled only once. Thus you can broadcast on pausing, resuming, skipping etc. (This is what HTC Hero and the default android app does).

= Examples = 
This sends a broadcast that Chris Cornell's song "You Know My Name" has started playing, and will scrobble any previously playing tracks:

{{{
Intent bcast = new Intent(PLAYSTATECHANGED);
bcast.putExtra("artist", "Chris Cornell");
bcast.putExtra("album", "Casino Royale");
bcast.putExtra("track", "You Know My Name");
bcast.putExtra("duration", 244);
sendBroadcast(bcast);
}}}

And this says that James Marster's song "Looking At You" has finished playing and should be scrobbled: 

{{{
Intent bcast = new Intent(PLAYBACKCOMPLETE);
bcast.putExtra("artist", "James Marster");
bcast.putExtra("album", "Like A Waterfall");
bcast.putExtra("track", "Looking At You");
bcast.putExtra("duration", 244);
sendBroadcast(bcast);
}}}